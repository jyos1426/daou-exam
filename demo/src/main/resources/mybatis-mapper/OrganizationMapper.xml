<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.OrgMapper">
    <resultMap id="OrgTreeNode" type="com.example.demo.vo.Organization" autoMapping="true">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="type" jdbcType="INTEGER" property="type" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="code" jdbcType="VARCHAR" property="code" />
        <result column="manager" jdbcType="INTEGER" property="manager" />
        <collection property="children" ofType="com.example.demo.vo.Organization" column="{id=id, dept_only=dept_only}" select="getChildren"></collection>
    </resultMap>

    <sql id="base_column_list">
        id, type, name, code, manager, parent_id
    </sql>

    <!-- SELECT FROM TOP -->
    <select id="getOrgList" resultMap="OrgTreeNode">
        SELECT
        <include refid="base_column_list" />, #{deptOnly} dept_only
        FROM organization
        WHERE 1=1
        <choose>
            <when test="deptCode == null">        
              AND id = 1
            </when>
            <otherwise>        
              AND code=#{deptCode}
            </otherwise>
        </choose>
    </select>

    <!-- SELECT CHILDREN -->
    <select id="getChildren" parameterType="java.util.Map" resultMap="OrgTreeNode">
        SELECT
        <include refid="base_column_list" />
        FROM organization
        WHERE organization.parent_id = #{id}
        <if test="dept_only">
        AND type IN (0,1,2)
        </if>
    </select>

    <!-- SELECT ONE -->
    <select id="getOneById" parameterType="int" resultType="SimpleOrganization">
        SELECT
        <include refid="base_column_list" />
        FROM organization
        WHERE organization.id = #{id}
    </select>

    <!-- INSERT -->
    <insert id="insertOrganization" parameterType="SimpleOrganization">
        INSERT INTO organization (
            id, code, name, type, manager, parent_id
        ) VALUES (
            #{id}, #{code}, #{name}, #{type}, #{manager}, #{parentId}
        )
    </insert>

    <!-- UPDATE -->
    <update id="updateOrganization">
        UPDATE emp
        SET code = #{org.code},
            name = #{org.name},
            type = #{org.type},
            manager = #{org.manager},
            parent_id = #{org.parentId}
        WHERE id = #{id}
    </update>

    <!-- DELETE -->
    <delete id="deleteOrganization">
        DELETE FROM organization WHERE id = #{id}
    </delete>
</mapper>